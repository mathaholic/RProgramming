GOOD
good
cleana <- a[good,]
cleana
good a<- a[good,]
gooda <- a[good,]
b <- gooda[order(as.numeric(gooda[,3]),gooda[,1]),]
b
worst <- length(b)
b
worst
worst <- nrow(b)
worst
source('~/rankall.R')
source('~/rankall.R')
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack", 2)
source('~/rankall.R')
rankall("heart attack",2)
rankall("heart attack","best")
rankall("heart attack","worst")
source('~/rankall.R')
rankall("heart attack",1)
dat <- data.frame()
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = c("Not Available"))
allinfo <- mydata[ ,c(2,7,11,17,23)]
if(num == "best"){num <- 1}
bystate <- split(allinfo, allinfo$State)
info <- allinfo[,c(1,2,3)]
bystate <- split(info, info$State)
num <- "best"
if(num == "best"){num <- 1}
for(i in length(bystate)){
##clean up data
a <- as.data.frame(bystate[i])
good <- complete.cases(a)
gooda <- a[good,]
b <- gooda[order(as.numeric(gooda[,3]),gooda[,1]),]
##now that we have out cleaned data, we can start getting what we want out of it
##  Things we want: 1. to populate sol[,i] with the name and state of the hospital requested
if(num == "worst"){num <- nrow(b)}
if(num > nrow(b)){
dat[i,] <- c("NA", b[1,2])
}else{
dat[i,] <- c(b[num,1],b[1,2])}
}
?rbind
sol <- data.frame()
View(b)
head(mystate)
head(bystate)
a <- as.data.frame(bystate[i]
)
a
a <- as.data.frame(bystate[2])
a
good <- complete.cases(a)
gooda <- a[good,]
head(gooda)
b <- gooda[order(as.numeric(gooda[,3]),gooda[,1]),]
head(b)
b
sol <-rbind(sol, c(b[2,2],b[1,2])
sol <-rbind(sol, c(b[1,1],b[1,2]))
sol
colnames(sol) <- c("hospital", "state")
sol
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack", 3)
source('~/rankall.R')
rankall("heart attack", 3)
rankall("heart attack", 1)
source('~/rankall.R')
rankall("heart attack",1)
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings = c("Not Available"))
allinfo <- mydata[ ,c(2,7,11,17,23)]
bystate <- split(allinfo, allinfo$State)
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack",1)
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack",1)
rankall("heart attack","best")
rankall("heart attack","worst")
rankall("heart attack",2)
source('~/rankall.R')
source('~/rankall.R')
library(swirl)
swirl()
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20, nrow=4)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
foo
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_matrix
my_matrix[[2]]
my_matrix[2]
my_matrix[[10]]
my_matrix{10}
my_matrix[10]
source('~/rankall.R')
rankall("heart attack", 1)
rankall("heart attack", best)
rankall("heart attack", "best")
rankall("heart attack", 2)
rankall("heart attack", 3)
rankall("heart attack", 4)
rankall("heart attack", "worst")
source('~/rankall.R', echo=TRUE)
trankall("heart attack", "best")
source('~/trankall.R')
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
unique_States <- sort(unique(data$State))
str(unique_States)
unique_States <- sort(unique(data$State))
for (i in 1:length(unique_States)) {
subState <- split(x, x$State)}
unique(data[,7]0
unique(data[,7])
a<-unique(data[,7])
class(a)
class(unique_States)
identical(a, unique_States)
sort(a)
b<- sort(a)
identical(b, unique_States)
x <- data[, c(2, 7, 11, 17, 23)]
unique_States <- sort(unique(data$State))
for (i in 1:length(unique_States)) {
subState <- split(x, x$State)
}
str(subState)
bystate <- split(info, info$State)
bystate <- split(x, x$State)
identical(bystate, subState)
?sort
View(data)
allinfo <- data[ ,c(2,7,11,17,23)]
head(allinfo)
?order
allinf <-order(allifo[,2])
allinf <-order(allinfo[,2])
head(allinf)
allinfo[,2]
order(allinfo[,2])
allinf <- allinfo[order(allinfo[,2])]
allinf <- allinfo[order(allinfo[,2]),]
head(allinf)
allinfo[order(allinfo$State)]
allinfo[,order(allinfo$State)]
allinfo[order(allinfo$State),]
a <-allinfo[order(allinfo$State),]
head(a)
class(a)
length(a)
bystate <- split(allinf, allinf$State)
head(bystate)
dim(bystate)
attributes(bystate)
str(bystate)
length(bystate)
View(allinf)
class(allinf)
class(bystate)
bystate[1]
bystate[[1]]
identical(bystate[1],bystate[[1]])
?data
?typeof
vect <- vector(1:14)
vect <- c(1:14)
typeof(vect)
source('~/t2rankall.R')
t2rankall("heart attack", 1)
t2rankall("heart attack", 2)
t2rankall("heart attack", 3)
t2rankall("heart attack", 4)
t2rankall("heart attack", "worst")
"best"
t2rankall("heart attack", "best")
source('~/trankall.R')
trankall("heart attack", 1)
source('~/t2rankall.R')
t2rankall("heart attack", 1)
source('~/t2rankall.R')
t2rankall("heart attack", 1)
source('~/t2rankall.R')
t2rankall("heart attack", 1)
source('~/t2rankall.R')
t2rankall("heart attack", 1)
my_matrix <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix
my_matrix[2,] <- c(5:1)
my_matrix
l2 <- data.frame()
l2[1,]<- c("hosp", 5)
l2[1,]<- "hosp", 5
l2[1,]<- rbind(c("hosp", 5)
)
class(l2)
summary(l2)
str(l2)
l2
l3 <- data.fram(nrow=54,ncol=2)
l3 <- data.frame(nrow=54,ncol=2)
l3
l3 <- data.frame(nrow(54),ncol(2))
l3
l3 <- data.frame(colnames(c("hospital", "state")))
l3
l3[1,] <- c("MyHosp", "TX")
l3[1,] <- rbind(l3, c("MyHosp", "TX"))
source('~/rankall.R')
rankall("heart attack", 1)
l3 <- data.frame(row.names = c("hosptial", "state"))
l3
l3 <- data.frame(col.names = c("hosptial", "state"))
l3
l3 <- data.frame(colnames = c("hosptial", "state"))
l3
l3 <- data.frame(colnames = c("hosptial", "state"), check.names = TRUE)
l3
l3 <- data.frame()
colnames(l3) <- c("hospital", "state")
l3
l3[1,] <- rbind(l3, c("Hosp", "WY"))
source('~/testfxn.R')
tstfxn("1")
tstfxn(1)
a <- testfxn
a <- tstfxn(1)
a
str(a)
complete.cases(a)
complete.cases(as.data.frame(a))
complete.cases(as.data.frame(a[1]))
good <- complete.cases(as.data.frame(bystate[i]))
good <- complete.cases(as.data.frame(a[i]))
good <- complete.cases(as.data.frame(a[1]))
gooda <-(as.data.frame(a[1][good,])
)
gooda <-(as.data.frame(a[1])[good,]
gooda <- as.data.frame(a[1])[good,]
gooda <- as.data.frame(a[1][good,])
b <- as.data.frame(a[1])
gooda <- a[good,]
gooda <- a[good,]
gooda <- b[good,]
gooda <- (as.data.frame(a[1]))[good,]
goodb <- b[good]
goodb <- b[good,]
identical(goodb, gooda)
nrow(good)
nrow(my_matrix)
source('~/rankall.R')
rankall("heart attack", 1)
rankall("heart attack", "best")
rankall("heart attack", 4)
rankall("heart attack", "worst")
source('~/rankall.R')
rankall("heart attack", 1)
rankall("heart attack", 2)
rankall("heart attack", 3)
rankall("heart attack", 4)
rankall("heart attack", "worst")
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack", 1)
tdf <- data.frame(hospital = character(0), state = character(0))
tdf
tdf[1] <- rbind(tdf, c("general hosp", "NM"))
tdf
tdf <- rbind(tdf, c("general hosp", "NM"))
tdf
tdf <- data.frame(hospital = character(0), state = character(0))
tdf
tdf[1,] <- rbind(tdf, c("general hospital", "state"))
tdf
tdf <- data.frame(hospital = character(0), state = character(0))
tdf[1,] <- c("general hospital", "state")
tdf <- data.frame(hospital = character(0), state = character(0), stringsAsFactors = FALSE)
tdf <- rbind(tdf, c("general hosp", "NM"))
tdf
tdf <- rbind(tdf, c("providence", "RI"))
tdf
tdf <- data.frame(hospital = character(0), state = character(0), stringsAsFactors = FALSE)
tdf[1,] <- c("general hospital", "NM")
tdf
tdf[2, ] <- c("providence", "RI")
tdf
source('~/rankall.R')
rankall("heart attack", 1)
rankall("heart attack", 2)
rankall("heart attack", 3)
rankall("heart attack", 4)
rankall("heart attack", "worst")
source('~/rankall.R')
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
?unlist
source('~/rankall.R')
rankall("heart attack", 1)
source('~/rankall.R')
source('~/therankall.R')
thrankall("heart attack", 3)
thrankall("heart attack", 1)
source('~/rankall_best_test.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('~/rankall.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('~/rankall.R')
submit()
submit()
submit()
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
install.packages("rmarkdown")
library(rmarkdown)
load(url("http://bit.ly/dasi_gss_data"))
View(gss)
gvet <- gss[where(gss$vetyears !== NA)]
gvet <- gss[where(gss$vetyears !== "NA")]
gvet <- gss[where(gss$vetyears != "NA")]
gvet <- gss[,where(gss$vetyears != "NA")]
gvet <- gss[,gss$vetyears]
head(gss)
gvet <- gss[,13]
head(gvet)
good <- complete.cases(gvet)
goodvet <- gvet[good]
goodvet
length(goodvet)
class(goodvet)
vvet <- goodvet!="None"
vvvvet <- goodvet[vvet]
length(vvvvet)
table(vvvvet)
vettest <- gss[,c(13,36,44,46)]
colnames(vettest)
good <- complete.cases(vettest)
goodvettest <- vettest[good,]
reallyvets <- subset(goodvesttest, goodvettest$vetyears != "None")
reallyvets <- subset(goodvettest, goodvettest$vetyears != "None")
head(reallyvets)
reallyvets <- subset(vettest, vettest$vetyears != "None" & vettest$vetyears != "NA")
head(reallyvets)
plot(veteran = reallyvets$vetyears, road spending = reallyvets$natroad )
plot(veteran = reallyvets$vetyears, road_spending = reallyvets$natroad )
plot(x = reallyvets$vetyears, y = reallyvets$natroad )
plot(y = reallyvets$vetyears, x = reallyvets$natroad )
plot(y = reallyvets$vetyears, x = reallyvets$natroad, type = "l" )
hist(reallyvets$natroad)
hist(reallyvets$natroad, freq = TRUE)
head(reallyvets)
tail(reallyvets)
table(reallyvets)
mosaicplot(table(reallyvets))
table(reallyvets$natcity)
hist(table(reallyvets$natcity))
barplot((table(reallyvets$natcity)))
barplot((table(reallyvets$natcity)), title = "Veteran's Opinion on Road and Bridge Funding")
barplot((table(reallyvets$natcity)), title("Veteran's Opinion on Road and Bridge Funding")
)
table(vettest)
table(vettest$natcity)
table(vettest$natmass)
table(vettest$natroad)
nrow(vettest)
table(reallyvets)
table(reallyvets$natcity)
table(reallyvets$natmass)
table(reallyvets$natroad)
table(reallyvets!$vetyears)
table(reallyvets$!vetyears)
table(reallyvets[,2:4])
reallyvets
write.csv(reallyvets, file = "C:/Users/jennaspm/Documents/CourseraStats/vetstats.csv")
getwd
getwd()
a <- read.csv("C:/Users/jennaspm/Desktop/Unbiased/JulyCrawls.csv")
a <- read.csv("C:\Users\jennaspm\Desktop\Unbiased\JulyCrawls.csv")
a <- read.csv("C:/Users/jennaspm/Desktop/Unbaised/JulyCrawls.csv")
nrow(a)
samplesize <- 1:(nrow(a)/3)
max(a[,1])
min(a[,1])
?sample
sameple(a[,1], 2)
sample(a[,1], 2)
b <- sample(a[,1], 2)
log(b)
b
b
sum(log(b)
)
log(b[1]) + log(b[2])
a <- read.csv("C:/Users/jennaspm/Desktop/Unbaised/JulyCrawls.csv")
counter <- 1:100
logsums <- vector()
for(i in counter){
b <- sample(a[,1], 180)
logsums[i] <- sum(log(b))
}
hist(logsums)
summary(logsums)
a <- read.csv("C:/Users/jennaspm/Desktop/Unbaised/JulyCrawls.csv")
set.seed(1)
counter <- 1:100
logsums <- vector()
for(i in counter){
b <- sample(a[,1], 180)
logsums[i] <- sum(log(b))
}
hist(logsums)
summar(logsums)
a <- read.csv("C:/Users/jennaspm/Desktop/Unbaised/JulyCrawls.csv")
set.seed(1)
counter <- 1:100
logsums <- vector()
for(i in counter){
b <- sample(a[,1], 180)
logsums[i] <- sum(log(b))
}
hist(logsums)
summary(logsums)
head(logsums)
a <- read.csv("C:/Users/jennaspm/Desktop/Unbaised/JulyCrawls.csv")
set.seed(1)
counter <- 1:100
logsums <- vector()
for(i in counter){
b <- sample(a[,1], 180)
logsums[i] <- sum(log(b))
}
hist(logsums)
summary(logsums)
sd(logsums)
mean(logsums)
median(logsums)
a <- read.csv("C:/Users/jennaspm/Desktop/Unbaised/JulyCrawls.csv")
set.seed(1)
counter <- 1:100
logsums <- vector()
for(i in counter){
b <- sample(a[,1], 180)
logsums[i] <- sum(log(b))
}
hist(logsums)
summary(logsums)
sd(logsums)
mean(logsums)
median(logsums)
logsums
b
